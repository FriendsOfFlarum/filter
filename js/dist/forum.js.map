{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,+BCLvD,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gC,aCgBxDC,IAAAA,aAAAA,IACE,cACA,YACEC,EAAAA,EAAAA,UAASC,IAAAA,UAAuB,cAAc,SAAUC,EAAUC,GAChE,GAAoB,YAAhBA,EAAKC,OAAsB,CAC7B,IAAMC,EAASF,EAAKG,eACpB,MAAO,CAACP,IAAAA,WAAAA,MAAqB,iCAAkCM,EAAS,UAAME,UAAU,uBAAuBF,GAAiB,IAElI,OAAOH,EAASC,SAGnB,K","sources":["webpack://@fof/filter/webpack/bootstrap","webpack://@fof/filter/webpack/runtime/compat get default export","webpack://@fof/filter/webpack/runtime/define property getters","webpack://@fof/filter/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/filter/webpack/runtime/make namespace object","webpack://@fof/filter/external root \"flarum.core.compat['common/extend']\"","webpack://@fof/filter/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/filter/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@fof/filter/./src/forum/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/CommentPost'];","/*\n *\n *  This file is part of fof/filter.\n *\n *  Copyright (c) 2020 FriendsOfFlarum..\n *\n *  For the full copyright and license information, please view the license.md\n *  file that was distributed with this source code.\n *\n */\n\nimport { override } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\n\nimport CommentPost from 'flarum/forum/components/CommentPost';\n\napp.initializers.add(\n  'fof-filter',\n  () => {\n    override(CommentPost.prototype, 'flagReason', function (original, flag) {\n      if (flag.type() === 'autoMod') {\n        const detail = flag.reasonDetail();\n        return [app.translator.trans('fof-filter.forum.flagger_name'), detail ? <span className=\"Post-flagged-detail\">{detail}</span> : ''];\n      }\n      return original(flag);\n    });\n  },\n  -20\n);\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","override","CommentPost","original","flag","type","detail","reasonDetail","className"],"sourceRoot":""}